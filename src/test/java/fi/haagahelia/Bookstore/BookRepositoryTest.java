package fi.haagahelia.Bookstore;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.test.context.junit4.SpringRunner;

import fi.haagahelia.Bookstore.domain.Book;
import fi.haagahelia.Bookstore.domain.BookRepository;
import fi.haagahelia.Bookstore.domain.Category;

@RunWith(SpringRunner.class)
@DataJpaTest
public class BookRepositoryTest {

	@Autowired
	private BookRepository bookRepo;
	
	@Test
	public void bookIdAutoGenerated() {
		Category category = new Category("randomCategory");
		Book book = new Book("randomBook", "randomAuthor", 1234, "randomISBN", (float) 22.22, category);
		bookRepo.save(book);
		assertThat(book.getId()).isNotNull();
	}

	@Test
	public void findByAuthorShouldReturnBook() {
		List<Book> books = bookRepo.findByAuthor("Juha");
		assertThat(books).hasSize(1);
		assertThat(books.get(0).getTitle()).isEqualTo("Server Programming");
	}
	
	@Test
	public void findByTitleShouldReturnBook() {
		List<Book> books = bookRepo.findByTitle("randomBook");
		assertThat(books).hasSize(1);
		assertThat(books.get(0).getAuthor()).isEqualTo("randomAuthor");
	} // returns error because it can't find randomBook, functional scope!
}
